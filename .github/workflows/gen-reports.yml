name: Generate reports

on:
  push:
    branches:
    - master
    paths:
    - flake.*
    - .github/workflows/gen-reports.yml

  schedule:
   - cron: '0 */1 * * *'

jobs:
  generante-reports:

    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
        - project: nixpkgs
          jobset: trunk
        - project: nixpkgs
          jobset: nixpkgs-unstable-aarch64-darwin
        - project: nixpkgs
          jobset: nixpkgs-21.11-darwin
        - project: nixpkgs
          jobset: staging-next
        - project: nixpkgs
          jobset: staging-next-21.11
        - project: nixos
          jobset: trunk-combined
        - project: nixos
          jobset: release-21.11
        - project: nixos
          jobset: release-21.11-aarch64

    name: Generate ${{ matrix.project }}:${{ matrix.jobset }} report

    env:
      PROJECT: ${{ matrix.project }}
      JOBSET: ${{ matrix.jobset }}
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: master

    - name: Install Nix
      uses: cachix/install-nix-action@v16
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

    - name: Setup Cachix
      uses: cachix/cachix-action@v10
      with:
        name: malo
        signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}

    - name: Get jobset eval IDs
      id: get-jobset-ids
      run: |
        echo "::set-output name=id::$(nix run .#jobset-latest-eval-id -- $PROJECT $JOBSET)"
        echo "::set-output name=success-id::$(nix run .#jobset-latest-successful-eval-id -- $PROJECT $JOBSET)"

    - name: Get cache
      uses: actions/cache@v2
      id: cache
      with:
        path: data
        key: ${{ matrix.project }}:${{ matrix.jobset }}-${{ steps.get-jobset-ids.outputs.success-id }}-${{ steps.get-jobset-ids.outputs.id }}
        restore-keys: |
          ${{ matrix.project }}:${{ matrix.jobset }}-${{ steps.get-jobset-ids.outputs.success-id }}-
          ${{ matrix.project }}:${{ matrix.jobset }}-

    - name: Generate report
      if: steps.get-jobset-ids.outputs.success-id != steps.get-jobset-ids.outputs.id || steps.cache.outputs.cache-hit != 'true'
      run: |
        nix run . -- $PROJECT $JOBSET

    - name: Push new/updated report
      if: steps.get-jobset-ids.outputs.success-id != steps.get-jobset-ids.outputs.id || steps.cache.outputs.cache-hit != 'true'
      env:
        EVAL: ${{ steps.get-jobset-ids.outputs.id }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add --all
        git commit -m "Add/update $PROJECT:$JOBSET report for eval $EVAL"
        git pull --rebase=true
        git push
